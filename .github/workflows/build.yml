name: Build

on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review, converted_to_draft ]
  workflow_dispatch:
    inputs:
      linting:
        type: boolean
        description: Run the linter
        required: false
        default: false
      runCodeCoverage:
        type: boolean
        description: Run code coverage
        required: false
        default: true
      runTestsExtended:
        type: boolean
        description: Run the tests without holding back
        required: false
        default: true

concurrency:
  group: ${{ github.ref }}

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    if: github.event.inputs.linting == true || github.event.pull_request.draft == false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Linting
        run: ./gradlew clean ktlintCheck --parallel

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      RUN_CODE_COVERAGE: ${{ github.event.inputs.runCodeCoverage == true || github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Gradle
        env:
          RUN_KOTEST_EXTENDED: ${{ github.event.inputs.runTestsExtended == true || github.event.pull_request.draft == false }}
        run: ./gradlew clean build --refresh-dependencies -Pversion=$VERSION -x koverReport

      - name: Check Contract Syntax
        run: ./gradlew p8eClean p8eCheck --info

      - name: Generate code coverage reports
        if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
        run: ./gradlew koverReport

      - name: Upload coverage reports
        if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
        uses: codecov/codecov-action@v3
        with:
          files: build/reports/kover/report.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "test-results"
          path: "**/build/test-results/**/*.xml"

  event_file:
    name: "Upload event file"
    runs-on: ubuntu-latest
    steps:
      - name: Upload event file
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
