name: Build and Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to publish'
        required: true
        type: string
      publishToMaven:
        description: 'Publish the contracts and proto JARs to Maven'
        type: boolean
        required: true
        default: true
      bootstrapContracts:
        description: 'Bootstrap contracts to an object store'
        type: boolean
        required: true
        default: true
      publishingEnvironment:
        description: 'Environment to bootstrap the contracts to'
        required: true
        default: 'testnet'
        type: choice
        options:
          - 'testnet'
          - 'mainnet'
      objectStoreUrl:
        description: 'Object Store URL'
        default: 'grpcs://grpc.test.figure.com/objectstore.'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ (github.event.inputs.publishToMaven || github.event.inputs.bootstrapContracts) && github.event.inputs.version || github.event.inputs.chain_id }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    name: Build and Publish Jar
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.publishingEnvironment }}
    env:
      IS_TEST: ${{ github.event.inputs.publishingEnvironment == 'testnet' }}
      OS_GRPC_URL: ${{ github.event.inputs.objectStoreUrl }}
      PROVENANCE_GRPC_URL: ${{ github.event.inputs.publishingEnvironment == 'testnet' && 'grpcs://34.148.39.82:9090' || 'grpcs://34.148.50.57:9090' }}
      ENCRYPTION_PRIVATE_KEY: ${{ secrets.ENCRYPTION_PRIVATE_KEY }}
      SIGNING_PRIVATE_KEY: ${{ secrets.SIGNING_PRIVATE_KEY }}
      CHAIN_ID: ${{ github.event.inputs.publishingEnvironment == 'mainnet' && 'pio-mainnet-1' || 'pio-testnet-1' }}
      OS_GRPC_APIKEY: ${{ secrets.OS_GRPC_APIKEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Gradle
        run: ./gradlew -i clean build --refresh-dependencies -x koverMergedReport
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Contract Syntax
        run: ./gradlew p8eClean p8eCheck --info --stacktrace

      - name: Bootstrap Contracts
        if: inputs.bootstrapContracts
        run: ./gradlew p8eBootstrap --info

      - name: Install gpg secret key
        run: |
          export GPG_TTY=$(tty)
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > $GITHUB_WORKSPACE/release.gpg

      - name: Publish to Maven Central
        if: inputs.publishToMaven
        run: |
          VERSION=$( echo ${{ github.event.inputs.version }} | sed -e 's/^v//' )
          ./gradlew publishToSonatype -Pversion="$VERSION" \
            $(if [ "${{github.event.release.prerelease}}" = "true" ]; \
              then echo 'closeSonatypeStagingRepository'; \
              else echo 'closeAndReleaseSonatypeStagingRepository'; fi) \
            -Psigning.keyId=B7D30ABE -Psigning.password="${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}" \
            -Psigning.secretKeyRingFile=$GITHUB_WORKSPACE/release.gpg \
            --info
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "test-results"
          path: "**/build/test-results/**/*.xml"

  publish_test_results:
    name: Publish Test Results
    needs: [ build-and-publish ]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: "test-results"
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          check_name: "Test Results"
          pull_request_build: "commit"
          report_individual_runs: true
          files: artifacts/**/*.xml
